<style lang="less">
page {
  height: 100%;
}
.List {
	position: relative;
	border-top: 1rpx solid #eee;
  min-height: 100%;
  .backimg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -6;
  }
  .listbox {
    padding: 48rpx 30rpx;
    .likebox {
      box-shadow: #afafaf 8rpx 0rpx 14rpx;
      padding: 20rpx;
      background: #fff;
      border-radius: 20rpx;
      margin-bottom: 50rpx;
      display: flex;
      .likebox-l {
        width: 300rpx;
        height: 240rpx;
        position: relative;
        .img {
          width: 100%;
          height: 100%;
          image {
            width: 100%;
            height: 100%;
          }
        }
        .shadow {
          overflow: hidden;
          position: absolute;
          bottom: 0;
          width: 100%;
          height: 50rpx;
          background: rgba(0, 0, 0, 0.5);
          box-sizing: border-box;
          padding: 5rpx 16rpx;
          display: flex;
          justify-content: space-between;
          .price {
            font: 24rpx/40rpx '';
            color: #fff;
          }
          .position {
            display: flex;
            .positiontxt {
              font: 24rpx/40rpx '';
              color: #fff;
            }
            image {
              width: 40rpx;
              height: 40rpx;
            }
          }
        }
      }
      .likebox-b {
        overflow: hidden;
        flex: 1;
        margin-left: 40rpx;
        .name {
          font: 30rpx/30rpx '';
          width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .des {
          font: 22rpx/22rpx '';
          color: #878787;
          width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          margin: 18rpx auto 42rpx;
        }
        .time {
          font: 28rpx/28rpx '';
          margin-bottom: 40rpx;
          color: #2299dd;
          width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
        .naviga {
          width: 200rpx;
          height: 54rpx;
          font: 22rpx/54rpx '';
          text-align: center;
          color: #fff;
          border-radius: 30rpx;
          background: #2299dd;
          box-shadow: #c3e3f4 6rpx 16rpx 30rpx;
          margin: 0 auto;
        }
      }
    }
  }
}
</style>
<template>
  <view class="List">
    <view class="listbox">
      <repeat for="{{pointData}}" key="index" index="index" item="item">
				<view class="likebox" @tap="toDetail({{item.deptId}})">
					<view class="likebox-l">
						<view class="img">
							<image src="{{item.mainImg?imgBaseUrl+item.mainImg:''}}"/>
						</view>
						<view class="shadow">
							<view class="price"></view>
							<view class="position">
								<view class="positiontxt">{{item.distance?item.distance:""}}</view>
								<image src="../../img/position.png" mode="widthFix"/>
							</view>
						</view>
					</view>
					<view class="likebox-b">
						<view class="name">{{item.deptName?item.deptName:""}}</view>
						<view class="des">{{item.description?item.description:""}}</view>
						<view class="time">建议浏览{{item.proposalVisitTime?item.proposalVisitTime:""}}</view>
						<view class="naviga" catchtap="getmap({{item.latitude}},{{item.longitude}})">导航</view>
					</view>
				</view>
			</repeat>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import apifunc from '@/api/index.js';
import { imgBaseUrl } from '@/utils/env.js';

export default class List extends wepy.page {
  components = {};
  data = {
    isshowNav: '',
    imgBaseUrl: '',
    pointData: [],
    isRecommend:"",
    classId:"",
    backheight:""
  };
  computed = {};

  methods = {
    getmap(lat, long) {
      wx.openLocation({
        latitude: lat,
        longitude: long,
        scale: 28,
        success: function() {},
        fail: function() {
          wx.showToast({
            title: '调起地图失败',
            icon: 'none',
            duration: 1000
          });
        }
      });
    },
    toDetail(id) {
      wx.navigateTo({
        url: `/pages/addressdetail/index?id=${id}`,
        success: function() {},
        fail: function() {},
        complete: function() {}
      });
    }
  };
  getmapdata(type,classId,isRecommend) {
    var that = this;
    wx.getLocation({
      type: 'wgs84',
      success: function(res) {
        that.longitude = res.longitude;
        that.latitude = res.latitude;
        var value = {
          type: type,
          classId: classId,
          isRecommend: isRecommend,
          pageNum: 1,
          pageSize: 0,
          limitCount: '',
          orderBy: '',
          userId: that.userid,
          currentLatitude: res.latitude,
          currentLongitude: res.longitude
        };
        apifunc
          .getindexdata('/ztTravel/open/dept/page', 'get', value)
          .then(function(res) {
            console.log(res);
            if (res.code == 0) {
              that.pointData = res.msg;
              for (var i = 0; i <= that.pointData.length - 1; i++) {
                if (that.pointData[i].distance >= 1000) {
                  that.pointData[i].distance =
                    (that.pointData[i].distance / 1000).toFixed(1) + 'km';
                } else {
                  that.pointData[i].distance = that.pointData[i].distance + 'm';
                }
              }
              that.$apply();
            }
          });
      },
      fail: function(res) {
        that.authlocation();
      }
    });
  }
  onShow() {}
  onLoad(options) {
    var that = this;
		this.imgBaseUrl = imgBaseUrl;
		this.pointData=[];
    var res = wx.getSystemInfoSync();
    this.backheight = res.windowHeight;
    if (options.isshowNav) {
      this.isshowNav = options.isshowNav;
    } else {
      this.isshowNav = '';
    }
    if (options.isRecommend) {
      this.isRecommend = options.isRecommend;
    } else {
      if(options.isRecommend===0) {
        this.isRecommend = 0;
      } else {
        this.isRecommend = '';
      }
    }
    if (options.classId) {
      this.classId = options.classId;
    } else {
      this.classId = '';
    }
    if (wx.getStorageSync('userid')) {
      this.userid = wx.getStorageSync('userid');
    }
    this.getmapdata(that.isshowNav,that.classId,that.isRecommend);
    this.$apply;
  }
}
</script>
